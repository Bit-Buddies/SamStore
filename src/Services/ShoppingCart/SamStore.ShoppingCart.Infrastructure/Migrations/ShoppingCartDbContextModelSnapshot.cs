// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SamStore.ShoppingCart.Infrastructure.Contexts;

#nullable disable

namespace SamStore.ShoppingCart.Infrastructure.Migrations
{
    [DbContext(typeof(ShoppingCartDbContext))]
    partial class ShoppingCartDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SamStore.ShoppingCart.Domain.ShoppingCarts.ShoppingCartCostumer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("AlteredAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("altered_at");

                    b.Property<Guid>("CostumerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("costumer_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("created_at");

                    b.Property<bool>("Removed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("removed");

                    b.Property<decimal>("Total")
                        .HasColumnType("DECIMAL(65,4)")
                        .HasColumnName("total");

                    b.HasKey("Id")
                        .HasName("pk_shopping_cart_costumer");

                    b.HasIndex("CostumerId")
                        .HasDatabaseName("IDX_Costumer");

                    b.ToTable("shopping_cart_costumer", (string)null);
                });

            modelBuilder.Entity("SamStore.ShoppingCart.Domain.ShoppingCarts.ShoppingCartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("AlteredAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("altered_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("created_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(65,4)")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<bool>("Removed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("removed");

                    b.Property<Guid>("ShoppingCartId")
                        .HasColumnType("char(36)")
                        .HasColumnName("shopping_cart_id");

                    b.HasKey("Id")
                        .HasName("pk_shopping_cart_items");

                    b.HasIndex("ShoppingCartId")
                        .HasDatabaseName("ix_shopping_cart_items_shopping_cart_id");

                    b.ToTable("shopping_cart_items", (string)null);
                });

            modelBuilder.Entity("SamStore.ShoppingCart.Domain.ShoppingCarts.ShoppingCartItem", b =>
                {
                    b.HasOne("SamStore.ShoppingCart.Domain.ShoppingCarts.ShoppingCartCostumer", "ShoppingCart")
                        .WithMany("Items")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shopping_cart_items_shopping_cart_costumers_shopping_cart_id");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("SamStore.ShoppingCart.Domain.ShoppingCarts.ShoppingCartCostumer", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
