// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SamStore.Order.Infrastructure.Contexts;

#nullable disable

namespace SamStore.Order.Infrastructure.Migrations
{
    [DbContext(typeof(OrderContext))]
    partial class OrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SamStore.Order.Domain.Orders.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("AlteredAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("altered_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("created_at");

                    b.Property<bool>("Removed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("removed");

                    b.HasKey("Id")
                        .HasName("pk_order");

                    b.ToTable("order", (string)null);
                });

            modelBuilder.Entity("SamStore.Order.Domain.Vouchers.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("AlteredAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("altered_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("created_at");

                    b.Property<decimal>("Discount")
                        .HasColumnType("DECIMAL(65,4)")
                        .HasColumnName("discount");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("expire_at");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("key");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int>("QuantityUsed")
                        .HasColumnType("int")
                        .HasColumnName("quantity_used");

                    b.Property<bool>("Removed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("removed");

                    b.Property<int>("VoucherDiscountType")
                        .HasColumnType("int")
                        .HasColumnName("voucher_discount_type");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int")
                        .HasColumnName("voucher_type");

                    b.HasKey("Id")
                        .HasName("pk_voucher");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasDatabaseName("ix_voucher_key");

                    b.ToTable("voucher", (string)null);
                });

            modelBuilder.Entity("SamStore.Order.Domain.Vouchers.VoucherOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("AlteredAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("altered_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME")
                        .HasColumnName("created_at");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)")
                        .HasColumnName("order_id");

                    b.Property<bool>("Removed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("removed");

                    b.Property<Guid>("VoucherId")
                        .HasColumnType("char(36)")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id")
                        .HasName("pk_vouchers_orders");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_vouchers_orders_order_id");

                    b.HasIndex("VoucherId")
                        .HasDatabaseName("ix_vouchers_orders_voucher_id");

                    b.ToTable("vouchers_orders", (string)null);
                });

            modelBuilder.Entity("SamStore.Order.Domain.Vouchers.VoucherOrder", b =>
                {
                    b.HasOne("SamStore.Order.Domain.Orders.Order", "Order")
                        .WithMany("VoucherOrder")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vouchers_orders_order_order_id");

                    b.HasOne("SamStore.Order.Domain.Vouchers.Voucher", "Voucher")
                        .WithMany("VoucherOrders")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vouchers_orders_vouchers_voucher_id");

                    b.Navigation("Order");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("SamStore.Order.Domain.Orders.Order", b =>
                {
                    b.Navigation("VoucherOrder");
                });

            modelBuilder.Entity("SamStore.Order.Domain.Vouchers.Voucher", b =>
                {
                    b.Navigation("VoucherOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
